Pre-release steps:
    Run 'make memtest' to run the test suite through valgrind to detect
        definite and possible memory leaks

    Run 'configure --enable-symbols=mem' to enable the Tcl memory debugger.
        Run the test suite again to identify any potential issues.

    Run 'export LD_PRELOAD=/usr/lib64/libefence.so.0.0' and then run
        the test suite to detect possible memory overruns

    Make sure all changes are being made to a properly named branch in git:

        % git checkout -b 1.6.3
        % git push -u origin 1.6.3

Release steps:

    Change the version numbers in configure.in (1) and tcl-ciphertool.spec (2).
    Make sure that the configure script has been regenerated to reflect any
	changes to configure.in.
    Make sure that any new packages (eg library files) are reflected in
        the pkgIndex.tcl.in template
    Double-check that the ChangeLog is up to date including a note about
	the new release.
    Double-check that modified files have been checked in.

    Create a tarball from the branch to test the new release before it gets
    merged/tagged back to the master.  Create a rpm and install on the dev
    machine for testing.

        % git archive -o /path/to/rpmbuild/SOURCES/ciphertool-1.6.3.tar.gz --prefix ciphertool-1.6.3/ 1.6.3
        % rpmbuild -ts /path/to/rpmbuild/SOURCES/ciphertool-1.6.3.tar.gz
        % mock /path/to/rpmbuild/SOURCES/tcl-ciphertool-1.6.3-1.src.rpm

    After you are satisfied that the testing is successful, merge the
    branch back into master and tag.

        % git checkout master
        % git merge 1.6.3
        % git tag -a 1.6.3

    Log into github and add any files (eg src.rpm, binary rpm) to the release

