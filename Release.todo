Pre-release steps:
    Run the test suite through valgrind to catch any lingering
        memory leaks and failing tests.

    Make sure all changes are being made to a properly named branch in git:

        % git checkout 1.6.3
        % git push -u origin 1.6.3
        % git branch -u origin/1.6.3

Release steps:

    Change the version numbers in configure.in (1) and tcl-ciphertool.spec (2).
    Make sure that the configure script has been regenerated to reflect any
	changes to configure.in.
    Double-check that modified files have been checked in.
    Double-check that the ChangeLog is up to date including a note about
	the new release.

    Merge the branch back to the master:

        % git checkout master
        % git merge 1.6.3

    TODO:

    The remaining steps need to be updated after I validate a new
    release workflow using git.

    Create a build subdirectory:

	% cd ~/src/ciphers/ciphertool
	% mkdir build
	% cd build

    Run "configure" to generate the Makefile.  Nothing will get installed here,
    so there's no need to specify --prefix.

	% ../configure

    Run the "rpmall" Makefile target

	% make rpmall

    Copy the generated RPMs and source archives to their proper release
    directories.

	% cp dist/SOURCES/ciphertool-1.5.3.tar.gz ~/public_html/ciphertool
	% cp dist/SRPMS/ciphertool-1.5.3-1.src.rpm ~/public_html/ciphertool
	% cp dist/RPMS/i386/ciphertool-1.5.3-1.i386.rpm ~/public_html/ciphertool
	% cp dist/RPMS/i686/ciphertool-1.5.3-1.i386.rpm ~/public_html/ciphertool
	% cp dist/RPMS/athlon/ciphertool-1.5.3-1.i386.rpm ~/public_html/ciphertool

    Create Debian .deb packages (run as root in a Debian distribution):

	% alien -d ciphertool-1.5.3-1.i386.rpm

    Copy the updated documentation to Github:

	% make ; make doc
	% tar czf doc.tgz ./doc
	% Upload documentation to Github

