Pre-release steps:
    Run the test suite through valgrind to catch any lingering
        memory leaks and failing tests.

    Make sure all changes are being made to a properly named branch in git:

        % git checkout 1.6.3
        % git push -u origin 1.6.3
        % git branch -u origin/1.6.3

Release steps:

    Change the version numbers in configure.in (1) and tcl-ciphertool.spec (2).
    Make sure that the configure script has been regenerated to reflect any
	changes to configure.in.
    Double-check that modified files have been checked in.
    Double-check that the ChangeLog is up to date including a note about
	the new release.

    TODO:

    The remaining steps need to be updated after I validate a new
    release workflow using git.

    Create a tarball from the branch to test the new release before it gets
    merged/tagged back to the master.  Create a rpm and install on the dev
    machine for testing.

        % git archive -o /path/to/rpmbuild/SOURCES/ciphertool-1.6.3.tar.gz --prefix ciphertool-1.6.3/ 1.6.3
        % rpmbuild -ts /path/to/rpmbuild/SOURCES/ciphertool-1.6.3.tar.gz
        % mock /path/to/rpmbuild/SOURCES/tcl-ciphertool-1.6.3-1.src.rpm

    After you are satisfied that the testing is successful, merge the
    branch back into master and tag.

        % git checkout master
        % git merge 1.6.3
        % git tag

    Copy the updated documentation to Github:

	% make ; make doc
	% tar czf doc.tgz ./doc
	% Upload documentation to Github

