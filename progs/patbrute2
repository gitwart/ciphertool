#!/bin/sh
# \
exec tclsh "$0" ${1+"$@"}

# patbrute2 --
#
#	Automatic solver for patristocrat ciphers.
#
# RCS: @(#) $Id: vigenere.tcl,v 1.2 2004/09/08 14:42:09 wart Exp $
#
# Copyright (C) 2000-2002  Mike Thomas <wart@kobold.org>
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.


package require cipher
package require CipherUtil

if {[llength $argv] != 1} {
    puts stderr "Usage:  $argv0 cipherfile"
    exit 1
}

set filename [lindex $argv 0]

# Read the ciphertext from the input file
set ct [CipherUtil::readCiphertext $filename]

regsub -all { } $ct {} ct
set cipher [cipher create aristocrat -ct $ct]
$cipher configure -solkeytype 3
$cipher configure -solkeywordlength 10
$cipher configure -stepinterval 50000 \
	-bestfitcommand show_best_fit \
	-stepcommand show_fit

set maxValue 0
set maxKey {}
set stepInterval 50000
set count 0

proc show_best_fit {step key value pt} {
    puts "#$key\tFit:  $value"
    puts "#$step: $pt"
    puts ""
}

proc show_fit {step key pt} {
    global cipher

    puts #$key
    puts "#$step: $pt"
    puts ""
}

$cipher solve

puts "#=========="
puts ""
puts "type	[$cipher cget -type]"
puts "key	[list [$cipher cget -key]]"
puts "plaintext	[list [$cipher cget -pt]]"
puts "ciphertext	[list [$cipher cget -ct]]"
puts ""
puts "#=========="
