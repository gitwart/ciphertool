#!/bin/sh
# \
exec tclsh "$0" ${1+"$@"}

# kasiski --
#
#	Perform a Kasiski analysis on a cipher.
#
# RCS: @(#) $Id: kasiski,v 1.5 2008/03/05 03:54:58 wart Exp $
#
# Copyright (C) 2003  Mike Thomas <wart@kobold.org>
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

package require cmdline
package require cipher
package require CipherUtil

# Command line processing

set options [list \
    [list file.arg "-" "The name of the input cipher file"] \
    [list min.arg 3 "The minimum period to test"] \
    [list max.arg {} "The maximum period to test"]]

if {[catch {
    foreach {var val} [::cmdline::getoptions argv $options] {
	set $var $val
    }
} msg]} {
    puts stderr $msg
    exit 1
}

# Command line validation

if {$max == ""} {
    set max [expr {$min + 10}]
}

set ct [CipherUtil::readCiphertext $file]
regsub -all { } $ct {} ct

foreach set [stat kasiski $ct $min $max] {
    set period [lindex $set 0]
    set value [lindex $set 1]
    set normalizedValue [lindex $set 2]

    append periodRow [format %5d $period]
    append valueRow  [format %5d $value]
    append normalRow [format %5d $normalizedValue]
}

puts $periodRow
puts $valueRow
puts $normalRow
