#!/bin/sh
# \
exec tclsh "$0" ${1+"$@"}

# patbrute --
#
#	Automatic solver for patristocrat ciphers that iterate through
#	all 26! key combinations.
#
# RCS: @(#) $Id: vigenere.tcl,v 1.2 2004/09/08 14:42:09 wart Exp $
#
# Copyright (C) 2000-2002  Mike Thomas <wart@kobold.org>
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

package require cipher
package require CipherUtil

if {[llength $argv] != 1} {
    puts stderr "Usage:  $argv0 cipherfile"
    exit 1
}

set filename [lindex $argv 0]

# Read the ciphertext from the input file
set ct [CipherUtil::readCiphertext $filename]

regsub -all { } $ct {} ct
set cipher [cipher create aristocrat -ct $ct]

set maxValue 0
set maxKey {}
set stepInterval 5000
set count 0

proc patristocratFitCmd {cipher order} {
    global count
    global maxValue
    global maxKey
    global stepInterval

    set fixedKey [string map "10 j 11 k 12 l 13 m 14 n 15 o 16 p 17 q 18 r 19 s 20 t 21 u 22 v 23 w 24 x 25 y 0 z 1 a 2 b 3 c 4 d 5 e 6 f 7 g 8 h 9 i { } {}" $order]

    incr count

    set keyList [key generate -k1list $fixedKey]
    foreach key $keyList {
	$cipher restore $key abcdefghijklmnopqrstuvwxyz
	set pt [$cipher cget -pt]
	set value [score value $pt]
	#puts "$value ([$cipher cget -key]): $pt"
	if {$value > $maxValue} {
	    set maxValue $value
	    set maxKey $key
	    puts "$count:  $maxKey (K2) Fit:  $value"
	    puts "$pt"
	    puts ""
	}
    }

    if {$count%$stepInterval == 0} {
	puts "$count:  $key"
	puts "$pt"
	puts ""
    }
}

permute 26 "patristocratFitCmd $cipher"

$cipher restore [lindex $maxKey 0] [lindex $maxKey 1]
puts "#=========="
puts ""
puts "type	[$cipher cget -type]"
puts "key	[list [$cipher cget -key]]"
puts "plaintext	[list [$cipher cget -pt]]"
puts "ciphertext	[list [$cipher cget -ct]]"
puts ""
puts "#=========="
